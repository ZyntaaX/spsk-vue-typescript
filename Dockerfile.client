FROM node:20-slim AS base

ARG ARG_VITE_CLIENT_PORT
ARG ARG_VITE_SERVER_BASE_URL
ARG ARG_VITE_FIREBASE_APIKEY
ARG ARG_VITE_FIREBASE_AUTHDOMAIN
ARG ARG_VITE_FIREBASE_PROJECT_ID
ARG ARG_VITE_FIREBASE_STORAGE_BUCKET
ARG ARG_VITE_FIREBASE_MESSAGING_SENDER_ID
ARG ARG_VITE_FIREBASE_APP_ID

ENV VITE_CLIENT_PORT=${ARG_VITE_CLIENT_PORT}
ENV VITE_SERVER_BASE_URL=${ARG_VITE_SERVER_BASE_URL}
ENV VITE_FIREBASE_APIKEY=${ARG_VITE_FIREBASE_APIKEY}
ENV VITE_FIREBASE_AUTHDOMAIN=${ARG_VITE_FIREBASE_AUTHDOMAIN}
ENV VITE_FIREBASE_PROJECT_ID=${ARG_VITE_FIREBASE_PROJECT_ID}
ENV VITE_FIREBASE_STORAGE_BUCKET=${ARG_VITE_FIREBASE_STORAGE_BUCKET}
ENV VITE_FIREBASE_MESSAGING_SENDER_ID=${ARG_VITE_FIREBASE_MESSAGING_SENDER_ID}
ENV VITE_FIREBASE_APP_ID=${ARG_VITE_FIREBASE_APP_ID}

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

FROM base AS build
COPY . /app
WORKDIR /app
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
RUN pnpm deploy --filter=client /app/build/client
WORKDIR /app/build/client
RUN pnpm run build

FROM nginx:alpine AS production-stage
RUN mkdir /app
COPY --from=build /app/build/client/dist /app
COPY --from=build /app/build/client/nginx.conf /etc/nginx/nginx.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]

# Build:
# docker build -t client-test -f Dockerfile.client .

# Run:
# docker run -d -p 80:80 client-test